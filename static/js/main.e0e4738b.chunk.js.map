{"version":3,"sources":["reportWebVitals.js","components/common/Tag.jsx","components/common/CenteredSection.jsx","components/common/Card.jsx","components/facility/Facility.jsx","components/common/SpinnerOrError.jsx","util/index.js","hooks/useFetch.jsx","components/common/Dropdown.jsx","components/common/SearchInput.jsx","components/common/Navbar.jsx","hooks/useFilter.jsx","pages/Facilities.jsx","components/activity/Activity.jsx","pages/Activities.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","tagColors","Tag","tagName","color","Math","floor","random","length","CenteredSection","children","style","display","justifyContent","alignItems","Card","onClick","title","hoverable","headStyle","margin","cover","width","src","Facility","facility","navigate","useNavigate","id","name","tags","map","tag","SpinnerOrError","isLoading","error","height","size","message","type","orderArray","array","prop","sort","a","b","localeCompare","Date","getUniqueOccurences","filterProp","uniqueProps","uniqueOccurences","forEach","obj","nestedObj","includes","push","useFetch","url","useState","data","setData","setIsLoading","setError","fetchData","fetch","headers","Accept","response","json","console","log","useEffect","Option","Select","Dropdown","dropdownOptions","setSelectedOption","onChange","value","defaultValue","SearchInput","setInputValue","placeholder","e","target","Navbar","useFilter","selectedTag","searchKeyword","originalArray","filterOptions","filteredDataByTag","useMemo","filterValue","filteredArray","find","filterNestedArray","filteredDataByKeyword","results","Fuse","keys","search","normalisedArray","item","fuzzySearch","filteredData","array2","similarOccurences","getSimilarOccurences","Facilities","facilities","facilityTags","setSelectedTag","setSearchKeyword","filteredFacilities","flexDirection","Text","Typography","Activity","activity","strong","start_time","end_time","level","location","Activities","facilityId","useParams","activities","activityTags","filteredActivities","filter","o","facility_id","Number","ReactDOM","createRoot","document","getElementById","render","StrictMode","path","element"],"mappings":"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","file":"static/js/main.e0e4738b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import propTypes from 'prop-types';\nimport {Tag as AntdTag} from 'antd';\n\nconst tagColors = [\n  'pink',\n  'red',\n  'yellow',\n  'orange',\n  'cyan',\n  'green',\n  'blue',\n  'purple',\n  'geekblue',\n  'magenta',\n  'volcano',\n  'gold',\n  'lime',\n];\n\nconst Tag = ({tagName}) => {\n  return <AntdTag color={tagColors[Math.floor(Math.random() * tagColors.length)]}>{tagName}</AntdTag>;\n};\n\nTag.propTypes = {\n  tagName: propTypes.string.isRequired,\n};\n\nexport default Tag;\n","import propTypes from 'prop-types';\n\nconst CenteredSection = ({children, style}) => {\n  return (\n    <section style={{display: 'flex', justifyContent: 'center', alignItems: 'center', ...style}}>{children}</section>\n  );\n};\n\nCenteredSection.propTypes = {\n  children: propTypes.node.isRequired,\n  style: propTypes.any,\n};\n\nexport default CenteredSection;\n","import propTypes from 'prop-types';\nimport {Card as AntdCard, Image} from 'antd';\n\nimport CenteredSection from './CenteredSection';\n\nconst Card = ({onClick, title, children}) => {\n  return (\n    <AntdCard\n      hoverable\n      headStyle={{display: 'flex', justifyContent: 'center'}}\n      style={{margin: '1rem 0'}}\n      onClick={onClick}\n      title={title}\n      cover={<Image width={300} src=\"https://gw.alipayobjects.com/zos/antfincdn/aPkFc8Sj7n/method-draw-image.svg\" />}>\n      <CenteredSection>{children}</CenteredSection>\n    </AntdCard>\n  );\n};\n\nCard.propTypes = {\n  onClick: propTypes.func,\n  title: propTypes.string.isRequired,\n  children: propTypes.node.isRequired,\n};\n\nexport default Card;\n","import propTypes from 'prop-types';\nimport {useNavigate} from 'react-router-dom';\n\nimport Tag from '../common/Tag';\nimport Card from '../common/Card';\n//I separate the external and internal imports\n\nconst Facility = ({facility}) => {\n  const navigate = useNavigate();\n\n  return (\n    <Card onClick={() => navigate(`/activities/${facility?.id}`)} title={facility?.name}>\n      {facility?.tags && facility.tags.map((tag) => <Tag key={tag?.id} tagName={tag?.name} />)}\n    </Card>\n  );\n};\n\nFacility.propTypes = {\n  facility: propTypes.shape({\n    name: propTypes.string.isRequired,\n    id: propTypes.number.isRequired,\n    tags: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number.isRequired,\n        name: propTypes.string.isRequired,\n      }).isRequired,\n    ),\n  }).isRequired,\n};\n\n/**\n * I am using js in this task, but usually I would be using typescript.\n * I have only used propTypes a couple of times and it was a long time ago,\n * but typescript is definitely much better, I forgot how many more errors there are when using plain js.\n * In that case instead of using propTypes, I would be creating an interface,\n * named Facility or FacilityProps, depending on where I initiate the interaface.\n * interface Facility{\n *  name:string;\n *  id:number;\n *  tags:Tag[];\n * }\n *\n * interface Tag{\n *  id:number;\n *  name:string;\n * }\n */\n\nexport default Facility;\n","import propTypes from 'prop-types';\nimport {Spin, Alert} from 'antd';\nimport CenteredSection from './CenteredSection';\n\nconst SpinnerOrError = ({isLoading, error}) => {\n  return isLoading ? (\n    <CenteredSection style={{height: '100vh'}}>\n      <Spin size=\"large\" />\n    </CenteredSection>\n  ) : error ? (\n    <CenteredSection style={{height: '100vh'}}>\n      <Alert message=\"There was an error\" type=\"error\" />\n    </CenteredSection>\n  ) : (\n    <></>\n  );\n};\n\nSpinnerOrError.propTypes = {\n  isLoading: propTypes.bool.isRequired,\n  error: propTypes.any,\n};\n\nexport default SpinnerOrError;\n","// @ts-nocheck\nimport Fuse from 'fuse.js';\n\n/**\n * Orders an array of a specific type based on an object property\n * @param  {Array<Object>} array - Array to be sorted\n * @param  {string} prop - Object property that the sorting is based on\n * @param  {'time' | 'text'} type - Object property that the sorting is based on\n * @returns {Array<Object>} - Alphabetically sorted array\n */\n\nexport const orderArray = (array, prop, type) => {\n  if (type === 'text') return array.sort((a, b) => a[prop].localeCompare(b[prop]));\n  else {\n    return array.sort((a, b) => new Date('1970/01/01 ' + a[prop]) - new Date('1970/01/01 ' + b[prop]));\n  }\n};\n\n/**\n * Filters a nested array by an object property\n * @param  {Array<Object>} array - Array to be filtered\n * @param  {string} prop - Object property which contains the nested array\n * @param  {string} filterProp - Object property in the nested array the filter is based on\n * @param  {string | number} filterValue - Value that the property in the nested array needs to be equal to\n * @returns {Array<Object>} - Filtered array\n */\n\nexport const filterNestedArray = (array, prop, filterProp, filterValue) => {\n  const filteredArray = [];\n  array.map((obj) => {\n    if (obj[prop].find((nestedObj) => nestedObj[filterProp] === filterValue)) {\n      filteredArray.push(obj);\n    }\n  });\n  return filteredArray;\n};\n\n/**\n * Get unique occurences from a nested array based on an object property\n * @param {Array} array - Array to be filtered\n * @param {string} prop - Object property which contains the nested array\n * @param {string} filterProp - Property the filtering for unique occurences is based on\n * @returns {Array<Object>} - Array with unique occurences based on a property\n */\n\nexport const getUniqueOccurences = (array, prop, filterProp) => {\n  const uniqueProps = [];\n  const uniqueOccurences = [];\n\n  array.forEach((obj) =>\n    obj[prop].forEach((nestedObj) => {\n      if (!uniqueProps.includes(nestedObj[filterProp])) {\n        uniqueProps.push(nestedObj[filterProp]);\n        uniqueOccurences.push(nestedObj);\n      }\n    }),\n  );\n\n  return uniqueOccurences;\n};\n\nexport const fuzzySearch = (array, prop, filterValue) => {\n  const fuse = new Fuse(array, {keys: [prop]});\n  const results = fuse.search(filterValue);\n  //Fuse.js returns each index within the item property, so we need to normalise the array\n  const normalisedArray = [];\n  results.forEach((obj) => normalisedArray.push(obj?.item));\n\n  return normalisedArray;\n};\n\n/**\n * Get similar occurences from 2 arrays based on an object property\n * @param {Array<Object>} array - First array to be compared\n * @param {Array<Object>} array2 - Second array to be compared\n * @param {string} prop - Object property the comparison is based on\n * @returns {Array<Object>} - Array with unique occurences\n */\nexport const getSimilarOccurences = (array, array2, prop) => {\n  const uniqueProps = [];\n  const similarOccurences = [];\n\n  array.forEach((obj) => {\n    if (!uniqueProps.includes(obj[prop])) uniqueProps.push(obj[prop]);\n  });\n\n  array2.forEach((obj) => {\n    if (uniqueProps.includes(obj[prop])) similarOccurences.push(obj);\n  });\n\n  return similarOccurences;\n};\n","import {useEffect, useState} from 'react';\n\n/**\n * Fetch data from a resource\n * @param {string} url - Url to fetch data from\n * @returns {{data:Array<Object>,isLoading:boolean;error:object}} - Fetched data, whether the request has been completed or not,error message in case of a failed request\n */\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(url, {headers: {'Content-Type': 'application/json', Accept: 'application/json'}});\n      let data = (await response.json())?.data;\n      setData(data);\n    } catch (err) {\n      console.log(err, 'err');\n      setError(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [url]);\n\n  return {\n    data,\n    isLoading,\n    error,\n  };\n};\n\nexport default useFetch;\n","import propTypes from 'prop-types';\nimport {Select} from 'antd';\n\nconst {Option} = Select;\n\nconst Dropdown = ({dropdownOptions, setSelectedOption}) => {\n  const handleOptionChange = (value) => {\n    value === 'All' ? setSelectedOption(null) : setSelectedOption(value);\n  };\n\n  return (\n    <Select style={{width: 120}} onChange={handleOptionChange} defaultValue=\"All\">\n      <Option value=\"All\">All</Option>\n      {dropdownOptions &&\n        dropdownOptions.map((tag) => (\n          <Option key={tag?.id} value={tag?.id}>\n            {tag.name}\n          </Option>\n        ))}\n    </Select>\n  );\n};\n\nDropdown.propTypes = {\n  dropdownOptions: propTypes.arrayOf(\n    propTypes.shape({\n      name: propTypes.string.isRequired,\n      id: propTypes.number.isRequired,\n    }),\n  ),\n  setSelectedOption: propTypes.func.isRequired,\n};\n\nexport default Dropdown;\n","import propTypes from 'prop-types';\nimport {Input} from 'antd';\n\nconst SearchInput = ({setInputValue}) => {\n  return <Input placeholder=\"Please type a word\" onChange={(e) => setInputValue(e.target.value)} />;\n};\n\nSearchInput.propTypes = {\n  setInputValue: propTypes.func.isRequired,\n};\n\nexport default SearchInput;\n","import propTypes from 'prop-types';\n\nimport Dropdown from './Dropdown';\nimport SearchInput from './SearchInput';\n\nconst Navbar = ({dropdownOptions, setSelectedOption, setInputValue}) => {\n  return (\n    <>\n      <Dropdown dropdownOptions={dropdownOptions} setSelectedOption={setSelectedOption} />\n      <SearchInput setInputValue={setInputValue} />\n    </>\n  );\n};\n\nNavbar.propTypes = {\n  dropdownOptions: propTypes.arrayOf(\n    propTypes.shape({\n      name: propTypes.string.isRequired,\n      id: propTypes.number.isRequired,\n    }),\n  ),\n  setSelectedOption: propTypes.func.isRequired,\n  setInputValue: propTypes.func.isRequired,\n};\n\nexport default Navbar;\n","import {useMemo} from 'react';\nimport {} from 'react-router-dom';\n\nimport {filterNestedArray, fuzzySearch, getSimilarOccurences, orderArray} from '../util';\n\n/**\n * Filter data by tag and keyword\n * @param {{selectedTag:number,searchKeyword:string;originalArray:Array<Object>,filterOptions:{prop:string,type:\"string\" | \"time\"}}} filterData - Tag filter, keyword filter, non-filtered data, object property the filter is based on\n * @returns {{filteredData:Array<Object>}} - Filtered data\n */\n\n//This code isn't very good, but of course in an actual application all this filtering and sorting,\n//would be happening on the backend instead of us needing to do this so inefficiently\n\nconst useFilter = ({selectedTag, searchKeyword, originalArray, filterOptions}) => {\n  const filteredDataByTag = useMemo(() => {\n    if (selectedTag) {\n      const filteredData = filterNestedArray(originalArray, 'tags', 'id', selectedTag);\n      return filteredData;\n    }\n    return [];\n  }, [selectedTag]);\n\n  const filteredDataByKeyword = useMemo(() => {\n    if (searchKeyword) {\n      const filteredData = fuzzySearch(originalArray, 'name', searchKeyword);\n      return filteredData;\n    }\n    return [];\n  }, [searchKeyword]);\n\n  const filteredData = useMemo(() => {\n    if (selectedTag && searchKeyword) {\n      return orderArray(\n        getSimilarOccurences(filteredDataByKeyword, filteredDataByTag, 'id'),\n        filterOptions.prop,\n        filterOptions.type,\n      );\n    } else if (searchKeyword) return filteredDataByKeyword;\n    else if (selectedTag) return filteredDataByTag;\n    else if (originalArray) return orderArray(originalArray, filterOptions.prop, filterOptions.type);\n  }, [searchKeyword, selectedTag, originalArray]);\n\n  return {filteredData};\n};\n\nexport default useFilter;\n","import {useState} from 'react';\n\nimport Facility from '../components/facility/Facility';\nimport SpinnerOrError from '../components/common/SpinnerOrError';\nimport {orderArray, getUniqueOccurences} from '../util';\nimport useFetch from '../hooks/useFetch';\nimport CenteredSection from 'components/common/CenteredSection';\nimport Navbar from '../components/common/Navbar';\nimport useFilter from '../hooks/useFilter';\n\nconst Facilities = () => {\n  const {data: facilities, isLoading, error} = useFetch('facilities.json');\n  const facilityTags = facilities && orderArray(getUniqueOccurences(facilities, 'tags', 'id'), 'name', 'text');\n\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [searchKeyword, setSearchKeyword] = useState(null);\n  const {filteredData} = useFilter({\n    selectedTag,\n    searchKeyword,\n    originalArray: facilities,\n    filterOptions: {prop: 'name', type: 'string'},\n  });\n  const filteredFacilities = filteredData && orderArray(filteredData, 'name', 'text');\n\n  return (\n    <>\n      {/* I think prop drilling up to 2 levels is fine*/}\n      {/* If I find myself having to do more than 2 levels, then I rethink about my approach and avoid prop drilling*/}\n      <CenteredSection style={{height: '10vh'}}>\n        <Navbar setSelectedOption={setSelectedTag} setInputValue={setSearchKeyword} dropdownOptions={facilityTags} />\n      </CenteredSection>\n      <SpinnerOrError isLoading={isLoading} error={error} />\n      <CenteredSection style={{flexDirection: 'column'}}>\n        {filteredFacilities && filteredFacilities.length > 0 ? (\n          filteredFacilities.map((facility) => <Facility key={facility?.id} facility={facility} />)\n        ) : (\n          <section>No Results</section>\n        )}\n      </CenteredSection>\n    </>\n  );\n};\n\nexport default Facilities;\n","import propTypes from 'prop-types';\nimport {Typography} from 'antd';\n\nimport Tag from '../common/Tag';\nimport Card from '../common/Card';\nimport CenteredSection from '../common/CenteredSection';\n\nconst {Text} = Typography;\n\nconst Activity = ({activity}) => {\n  return (\n    <Card title={activity?.name}>\n      <CenteredSection style={{flexDirection: 'column'}}>\n        <Text strong>Start time: {activity?.start_time}</Text>\n        <Text strong> End time: {activity?.end_time}</Text>\n        <Text strong>Level: {activity?.level}</Text>\n        <Text strong>Location: {activity?.location}</Text>\n        <CenteredSection style={{margin: '0.5rem 0'}}>\n          {activity?.tags && activity.tags.map((tag) => <Tag key={tag?.id} tagName={tag?.name} />)}\n        </CenteredSection>\n      </CenteredSection>\n    </Card>\n  );\n};\n\nActivity.propTypes = {\n  activity: propTypes.shape({\n    name: propTypes.string.isRequired,\n    id: propTypes.number.isRequired,\n    start_time: propTypes.string.isRequired,\n    end_time: propTypes.string.isRequired,\n    level: propTypes.string.isRequired,\n    location: propTypes.string.isRequired,\n    facility_id: propTypes.number.isRequired,\n    tags: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number.isRequired,\n        name: propTypes.string.isRequired,\n      }).isRequired,\n    ),\n  }).isRequired,\n};\n\nexport default Activity;\n","import {useState} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport Activity from '../components/activity/Activity';\nimport SpinnerOrError from '../components/common/SpinnerOrError';\nimport {orderArray, getUniqueOccurences} from '../util';\nimport useFetch from '../hooks/useFetch';\nimport CenteredSection from 'components/common/CenteredSection';\nimport Navbar from '../components/common/Navbar';\nimport useFilter from '../hooks/useFilter';\n\nconst Activities = () => {\n  const {facilityId} = useParams();\n  const {data: activities, isLoading, error} = useFetch('activities.json');\n  const activityTags = activities && orderArray(getUniqueOccurences(activities, 'tags', 'id'), 'name', 'text');\n\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [searchKeyword, setSearchKeyword] = useState(null);\n  const {filteredData} = useFilter({\n    selectedTag,\n    searchKeyword,\n    originalArray: activities,\n    filterOptions: {prop: 'start_time', type: 'time'},\n  });\n  const filteredActivities = filteredData && filteredData.filter((o) => o.facility_id === Number(facilityId));\n\n  return (\n    <>\n      <CenteredSection style={{height: '10vh'}}>\n        <Navbar setSelectedOption={setSelectedTag} setInputValue={setSearchKeyword} dropdownOptions={activityTags} />\n      </CenteredSection>\n      <SpinnerOrError isLoading={isLoading} error={error} />\n      <CenteredSection style={{flexDirection: 'column'}}>\n        {filteredActivities && filteredActivities.length > 0 ? (\n          filteredActivities.map((activity) => <Activity key={activity?.id} activity={activity} />)\n        ) : (\n          <section>No Results</section>\n        )}\n      </CenteredSection>\n    </>\n  );\n};\n\nexport default Activities;\n","import React from 'react';\nimport {BrowserRouter, Route, Routes} from 'react-router-dom';\n\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\nimport Facilities from './pages/Facilities';\nimport Activities from 'pages/Activities';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Facilities />}></Route>\n        <Route path=\"/activities/:facilityId\" element={<Activities />}></Route>\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}